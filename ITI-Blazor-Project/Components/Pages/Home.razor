@page "/"

@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Home</PageTitle>

<style>
    .home-container {
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        background: linear-gradient(135deg, #e0f7fa, #80deea);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        padding: 2rem;
    }

    .home-card {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(12px);
        border-radius: 20px;
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.08);
        padding: 3rem;
        text-align: center;
        max-width: 700px;
        width: 100%;
        animation: fadeIn 0.8s ease;
    }

    .home-title {
        font-size: 2.75rem;
        font-weight: bold;
        margin-bottom: 1rem;
        color: #0277bd;
    }

    .home-subtitle {
        font-size: 1.2rem;
        color: #455a64;
        margin-bottom: 2rem;
    }

    .role-section {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        gap: 1.5rem;
        margin-top: 2rem;
    }

    .role-card {
        flex: 1 1 250px;
        background: #ffffff;
        border-radius: 16px;
        padding: 1.5rem;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.06);
        transition: all 0.3s ease;
        cursor: pointer;
        border: 1px solid #e0e0e0;
        text-align: left;
    }

        .role-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.12);
            background: #e3f2fd;
        }

    .role-title {
        font-size: 1.4rem;
        font-weight: 700;
        color: #0288d1;
        margin-bottom: 0.5rem;
    }

    .role-desc {
        font-size: 1rem;
        color: #546e7a;
        line-height: 1.4;
    }

    .home-card a {
        color: #0277bd;
        font-weight: 600;
        text-decoration: none;
        position: relative;
    }

        .home-card a::after {
            content: '';
            position: absolute;
            left: 0;
            bottom: -2px;
            width: 100%;
            height: 2px;
            background-color: #0288d1;
            transform: scaleX(0);
            transform-origin: left;
            transition: transform 0.3s ease;
        }

        .home-card a:hover::after {
            transform: scaleX(1);
        }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<AuthorizeView>
    <Authorized>
        <div class="home-container">
            <div class="home-card">
                <h1 class="home-title">Welcome to the Learning Platform</h1>
                <p class="home-subtitle">
                    @if (isInstructor)
                    {
                        <span>You are registered as an <b>Instructor</b>. You can create and manage courses and exams.</span>
                    }
                    else if (isStudent)
                    {
                        <span>You are registered as a <b>Student</b>. You can view your courses and exams.</span>
                    }
                    else
                    {
                        <span>Your role is not recognized. Please contact the administrator.</span>
                    }
                </p>
                <div class="role-section">
                    @if (isInstructor)
                    {
                        <button class="role-card" @onclick="NavigateToInstructor">
                            <div class="role-title">📚 Instructor Dashboard</div>
                            <div class="role-desc">
                                Manage your courses, create questions, and organize exams for your students.
                            </div>
                        </button>
                    }
                    else if (isStudent)
                    {
                        <button class="role-card" @onclick="NavigateToStudent">
                            <div class="role-title">🎓 Student Dashboard</div>
                            <div class="role-desc">
                                View enrolled courses, take exams, and track your progress.
                            </div>
                        </button>
                    }
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="home-container">
            <div class="home-card">
                <h1 class="home-title">Welcome to the Learning Platform</h1>
                <p class="home-subtitle">
                    Please <a href="/Account/Login">log in</a> or <a href="/Account/Register">register</a> to access your dashboard.
                </p>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool isInstructor;
    private bool isStudent;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isInstructor = user.IsInRole("Instructor");
        isStudent = user.IsInRole("Student");
    }

    private void NavigateToInstructor()
    {
        NavigationManager.NavigateTo("/instructor");
    }

    private void NavigateToStudent()
    {
        NavigationManager.NavigateTo("/student");
    }
}
