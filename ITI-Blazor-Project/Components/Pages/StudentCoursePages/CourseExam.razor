@page "/Student/CourseExams/{CourseId:guid}"
@using ITI_Blazor_Project.Data
@using ITI_Blazor_Project
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation

<style>
    .exams-container {
        min-height: 100vh;
        background: linear-gradient(135deg, #a8dadc, #cdb4db);
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 3rem 1rem;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: #374151;
    }

    .exams-card {
        background: rgba(255, 255, 255, 0.95);
        border-radius: 24px;
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        max-width: 900px;
        width: 100%;
        padding: 2.5rem 2rem;
        backdrop-filter: blur(12px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        animation: fadeInUp 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.1);
    }

    h3 {
		font-size: 2rem;
        color: #4f46e5; 
        font-weight: 700;
        margin-bottom: 1.5rem;
        text-align: center;
    }

    .btn-secondary {
        background: linear-gradient(135deg, #6b7280 0%, #374151 100%);
        border: none;
        border-radius: 12px;
        padding: 0.5rem 1.25rem;
        font-weight: 600;
        box-shadow: 0 4px 15px rgba(107, 114, 128, 0.3);
        cursor: pointer;
        transition: all 0.3s ease;
        color: white;
        display: block;
        margin: 0 auto 1.5rem auto;
    }

        .btn-secondary:hover {
            box-shadow: 0 8px 25px rgba(55, 65, 81, 0.5);
            transform: translateY(-2px);
        }

    table.table-bordered {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 12px;
    }

        table.table-bordered thead tr th {
            background: transparent;
            color: #6b7280; 
            font-weight: 600;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #e5e7eb;
            text-align: left;
        }

        table.table-bordered tbody tr {
            background: #f9fafb;
            border-radius: 12px;
            box-shadow: 0 2px 6px rgb(0 0 0 / 0.05);
        }

            table.table-bordered tbody tr td {
                padding: 0.75rem 1rem;
                vertical-align: middle;
                color: #374151;
            }

    /* Uncomment and style if you want to enable Take Exam button
        .btn-success {
            background: linear-gradient(135deg, #10b981 0%, #047857 100%);
            border: none;
            border-radius: 12px;
            padding: 0.5rem 1.25rem;
            font-weight: 600;
            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
            cursor: pointer;
            transition: all 0.3s ease;
            color: white;
        }

        .btn-success:hover {
            box-shadow: 0 8px 25px rgba(4, 120, 87, 0.5);
            transform: translateY(-2px);
        }
        */

    @@keyframes fadeInUp {
        from

    {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }
</style>

<div class="exams-container">
    <div class="exams-card">
        <h3>Course Exams</h3>

        <button class="btn btn-secondary" @onclick="GoBack">Back to Enrolled Courses</button>

        @if (exams == null)
        {
            <p><em>Loading exams...</em></p>
        }
        else if (!exams.Any())
        {
            <p><em>No exams available for this course.</em></p>
        }
        else
        {
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Date</th>
                        @* <th>Actions</th> *@
                    </tr>
                </thead>
                <tbody>
                    @foreach (var exam in exams)
                    {
                        <tr>
                            <td>@exam.Title</td>
                            <td>@(exam.Date?.ToShortDateString() ?? "No date")</td>
                            @* <td>
                                <button class="btn btn-success" @onclick="() => TakeExam(exam.Id)">Take Exam</button>
                            </td> *@
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

@code {
    [Parameter] public Guid CourseId { get; set; }

    private List<Exam> exams = new List<Exam>();

    protected override async Task OnInitializedAsync()
    {
        exams = await DbContext.Exams
            .Where(e => e.ExamQuestions.Any(eq => eq.Question.CourseId == CourseId))
            .ToListAsync();
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/Student/EnrolledCourses");
    }

    private void TakeExam(Guid examId)
    {
        Navigation.NavigateTo($"/Student/TakeExam/{examId}");
    }
}
